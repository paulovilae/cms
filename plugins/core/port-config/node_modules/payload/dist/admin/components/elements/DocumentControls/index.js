"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentControls", {
    enumerable: true,
    get: function() {
        return DocumentControls;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _getTranslation = require("../../../../utilities/getTranslation");
const _formatDate = require("../../../utilities/formatDate");
const _Config = require("../../utilities/Config");
const _DocumentInfo = require("../../utilities/DocumentInfo");
const _Autosave = /*#__PURE__*/ _interop_require_default(require("../Autosave"));
const _DeleteDocument = /*#__PURE__*/ _interop_require_default(require("../DeleteDocument"));
const _DuplicateDocument = /*#__PURE__*/ _interop_require_default(require("../DuplicateDocument"));
const _Gutter = require("../Gutter");
const _Popup = /*#__PURE__*/ _interop_require_default(require("../Popup"));
const _PopupButtonList = /*#__PURE__*/ _interop_require_wildcard(require("../Popup/PopupButtonList"));
const _PreviewButton = /*#__PURE__*/ _interop_require_default(require("../PreviewButton"));
const _Publish = require("../Publish");
const _Save = require("../Save");
const _SaveDraft = require("../SaveDraft");
const _Status = /*#__PURE__*/ _interop_require_default(require("../Status"));
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'doc-controls';
const DocumentControls = (props)=>{
    const { id, collection, data, disableActions, global, hasSavePermission, isAccountView, isEditing, onSave, permissions } = props;
    const { slug, publishedDoc } = (0, _DocumentInfo.useDocumentInfo)();
    const { admin: { dateFormat }, collections, globals, routes: { admin: adminRoute } } = (0, _Config.useConfig)();
    const collectionConfig = collections.find((coll)=>coll.slug === slug);
    const globalConfig = globals.find((global)=>global.slug === slug);
    const { i18n, t } = (0, _reacti18next.useTranslation)('general');
    const hasCreatePermission = 'create' in permissions && permissions.create?.permission;
    const hasDeletePermission = 'delete' in permissions && permissions.delete?.permission;
    const showDotMenu = Boolean(collection && id && !disableActions && (hasCreatePermission || hasDeletePermission));
    const collectionLabel = ()=>{
        const label = collection?.labels?.singular;
        if (!label) return t('document');
        return typeof label === 'string' ? label : (0, _getTranslation.getTranslation)(label, i18n);
    };
    const unsavedDraftWithValidations = !id && collectionConfig?.versions?.drafts && collectionConfig.versions?.drafts.validate;
    return /*#__PURE__*/ _react.default.createElement(_Gutter.Gutter, {
        className: baseClass
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__wrapper`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__content`
    }, /*#__PURE__*/ _react.default.createElement("ul", {
        className: `${baseClass}__meta`
    }, collection && !isEditing && !isAccountView && /*#__PURE__*/ _react.default.createElement("li", {
        className: `${baseClass}__list-item`
    }, /*#__PURE__*/ _react.default.createElement("p", {
        className: `${baseClass}__value`
    }, t('creatingNewLabel', {
        label: collectionLabel()
    }))), (collection?.versions?.drafts || global?.versions?.drafts) && /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, (global || collection && isEditing) && /*#__PURE__*/ _react.default.createElement("li", {
        className: [
            `${baseClass}__status`,
            `${baseClass}__list-item`
        ].filter(Boolean).join(' ')
    }, /*#__PURE__*/ _react.default.createElement(_Status.default, null)), (collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.autosave && !unsavedDraftWithValidations || globalConfig?.versions?.drafts && globalConfig?.versions?.drafts?.autosave) && hasSavePermission && /*#__PURE__*/ _react.default.createElement("li", {
        className: `${baseClass}__list-item`
    }, /*#__PURE__*/ _react.default.createElement(_Autosave.default, {
        collection: collection,
        global: global,
        id: id,
        onSave: onSave,
        publishedDocUpdatedAt: publishedDoc?.updatedAt || data?.createdAt
    }))), collection?.timestamps && (isEditing || isAccountView) && /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, /*#__PURE__*/ _react.default.createElement("li", {
        className: [
            `${baseClass}__list-item`,
            `${baseClass}__value-wrap`
        ].filter(Boolean).join(' '),
        title: data?.updatedAt ? (0, _formatDate.formatDate)(data?.updatedAt, dateFormat, i18n?.language) : ''
    }, /*#__PURE__*/ _react.default.createElement("p", {
        className: `${baseClass}__label`
    }, t('lastModified'), ": "), data?.updatedAt && /*#__PURE__*/ _react.default.createElement("p", {
        className: `${baseClass}__value`
    }, (0, _formatDate.formatDate)(data.updatedAt, dateFormat, i18n?.language))), /*#__PURE__*/ _react.default.createElement("li", {
        className: [
            `${baseClass}__list-item`,
            `${baseClass}__value-wrap`
        ].filter(Boolean).join(' '),
        title: publishedDoc?.createdAt || data?.createdAt ? (0, _formatDate.formatDate)(publishedDoc?.createdAt || data?.createdAt, dateFormat, i18n?.language) : ''
    }, /*#__PURE__*/ _react.default.createElement("p", {
        className: `${baseClass}__label`
    }, t('created'), ": "), (publishedDoc?.createdAt || data?.createdAt) && /*#__PURE__*/ _react.default.createElement("p", {
        className: `${baseClass}__value`
    }, (0, _formatDate.formatDate)(publishedDoc?.createdAt || data?.createdAt, dateFormat, i18n?.language)))))), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__controls-wrapper`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__controls`
    }, (collection?.admin?.preview || global?.admin?.preview) && /*#__PURE__*/ _react.default.createElement(_PreviewButton.default, {
        CustomComponent: collection?.admin?.components?.edit?.PreviewButton || global?.admin?.components?.elements?.PreviewButton,
        generatePreviewURL: collection?.admin?.preview || global?.admin?.preview
    }), hasSavePermission && /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, collection?.versions?.drafts || global?.versions?.drafts ? /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, (collectionConfig?.versions?.drafts && !collectionConfig?.versions?.drafts?.autosave || unsavedDraftWithValidations || globalConfig?.versions?.drafts && !globalConfig?.versions?.drafts?.autosave) && /*#__PURE__*/ _react.default.createElement(_SaveDraft.SaveDraft, {
        CustomComponent: collection?.admin?.components?.edit?.SaveDraftButton || global?.admin?.components?.elements?.SaveDraftButton
    }), /*#__PURE__*/ _react.default.createElement(_Publish.Publish, {
        CustomComponent: collection?.admin?.components?.edit?.PublishButton || global?.admin?.components?.elements?.PublishButton
    })) : /*#__PURE__*/ _react.default.createElement(_Save.Save, {
        CustomComponent: collection?.admin?.components?.edit?.SaveButton || global?.admin?.components?.elements?.SaveButton
    }))), showDotMenu && /*#__PURE__*/ _react.default.createElement(_Popup.default, {
        button: /*#__PURE__*/ _react.default.createElement("div", {
            className: `${baseClass}__dots`
        }, /*#__PURE__*/ _react.default.createElement("div", null), /*#__PURE__*/ _react.default.createElement("div", null), /*#__PURE__*/ _react.default.createElement("div", null)),
        className: `${baseClass}__popup`,
        horizontalAlign: "right",
        size: "large",
        verticalAlign: "bottom"
    }, /*#__PURE__*/ _react.default.createElement(_PopupButtonList.ButtonGroup, null, hasCreatePermission && /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(_PopupButtonList.Button, {
        id: "action-create",
        to: `${adminRoute}/collections/${collection?.slug}/create`
    }, t('createNew')), !collection?.admin?.disableDuplicate && isEditing && /*#__PURE__*/ _react.default.createElement(_DuplicateDocument.default, {
        collection: collection,
        id: id,
        slug: collection?.slug
    })), hasDeletePermission && /*#__PURE__*/ _react.default.createElement(_DeleteDocument.default, {
        buttonId: "action-delete",
        collection: collection,
        id: id
    }))))), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__divider`
    }));
};

//# sourceMappingURL=data:application/json;base64,