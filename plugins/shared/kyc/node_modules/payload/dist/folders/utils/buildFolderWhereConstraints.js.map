{"version":3,"sources":["../../../src/folders/utils/buildFolderWhereConstraints.ts"],"sourcesContent":["import type { SanitizedCollectionConfig } from '../../collections/config/types.js'\nimport type { PayloadRequest, Where } from '../../types/index.js'\n\nimport { combineWhereConstraints } from '../../utilities/combineWhereConstraints.js'\nimport { mergeListSearchAndWhere } from '../../utilities/mergeListSearchAndWhere.js'\n\ntype Args = {\n  collectionConfig: SanitizedCollectionConfig\n  folderID?: number | string\n  localeCode?: string\n  req: PayloadRequest\n  search?: string\n  sort?: string\n}\nexport async function buildFolderWhereConstraints({\n  collectionConfig,\n  folderID,\n  localeCode,\n  req,\n  search = '',\n  sort,\n}: Args): Promise<undefined | Where> {\n  const constraints: Where[] = [\n    mergeListSearchAndWhere({\n      collectionConfig,\n      search,\n      // where // cannot have where since fields in folders and collection will differ\n    }),\n  ]\n\n  if (typeof collectionConfig.admin?.baseListFilter === 'function') {\n    const baseListFilterConstraint = await collectionConfig.admin.baseListFilter({\n      limit: 0,\n      locale: localeCode,\n      page: 1,\n      req,\n      sort:\n        sort ||\n        (typeof collectionConfig.defaultSort === 'string' ? collectionConfig.defaultSort : 'id'),\n    })\n\n    if (baseListFilterConstraint) {\n      constraints.push(baseListFilterConstraint)\n    }\n  }\n\n  if (folderID) {\n    // build folder join where constraints\n    constraints.push({\n      relationTo: {\n        equals: collectionConfig.slug,\n      },\n    })\n  }\n\n  const filteredConstraints = constraints.filter(Boolean)\n\n  if (filteredConstraints.length > 1) {\n    return combineWhereConstraints(filteredConstraints)\n  } else if (filteredConstraints.length === 1) {\n    return filteredConstraints[0]\n  }\n\n  return undefined\n}\n"],"names":["combineWhereConstraints","mergeListSearchAndWhere","buildFolderWhereConstraints","collectionConfig","folderID","localeCode","req","search","sort","constraints","admin","baseListFilter","baseListFilterConstraint","limit","locale","page","defaultSort","push","relationTo","equals","slug","filteredConstraints","filter","Boolean","length","undefined"],"mappings":"AAGA,SAASA,uBAAuB,QAAQ,6CAA4C;AACpF,SAASC,uBAAuB,QAAQ,6CAA4C;AAUpF,OAAO,eAAeC,4BAA4B,EAChDC,gBAAgB,EAChBC,QAAQ,EACRC,UAAU,EACVC,GAAG,EACHC,SAAS,EAAE,EACXC,IAAI,EACC;IACL,MAAMC,cAAuB;QAC3BR,wBAAwB;YACtBE;YACAI;QAEF;KACD;IAED,IAAI,OAAOJ,iBAAiBO,KAAK,EAAEC,mBAAmB,YAAY;QAChE,MAAMC,2BAA2B,MAAMT,iBAAiBO,KAAK,CAACC,cAAc,CAAC;YAC3EE,OAAO;YACPC,QAAQT;YACRU,MAAM;YACNT;YACAE,MACEA,QACC,CAAA,OAAOL,iBAAiBa,WAAW,KAAK,WAAWb,iBAAiBa,WAAW,GAAG,IAAG;QAC1F;QAEA,IAAIJ,0BAA0B;YAC5BH,YAAYQ,IAAI,CAACL;QACnB;IACF;IAEA,IAAIR,UAAU;QACZ,sCAAsC;QACtCK,YAAYQ,IAAI,CAAC;YACfC,YAAY;gBACVC,QAAQhB,iBAAiBiB,IAAI;YAC/B;QACF;IACF;IAEA,MAAMC,sBAAsBZ,YAAYa,MAAM,CAACC;IAE/C,IAAIF,oBAAoBG,MAAM,GAAG,GAAG;QAClC,OAAOxB,wBAAwBqB;IACjC,OAAO,IAAIA,oBAAoBG,MAAM,KAAK,GAAG;QAC3C,OAAOH,mBAAmB,CAAC,EAAE;IAC/B;IAEA,OAAOI;AACT"}